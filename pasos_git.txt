Abrir la consola
ls para ver el contenido de la carpeta
cd Escritorio para ir a la dirección
mkdir "carpeta_nueva" para crear una carpeta

Configurar con variables locales, principalmente cuando uno trabaja sólo:
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git config --list

Inicializando:
git init
Renombrar la rama como main:
git branch -m main
Ver el status:
git status
Agregar un fichero o versionar:
git add nombre_archivo.py
git add --all
Commit:
git commit  -> sin un mensaje se abre VIM, para salir :q!
git commit -m "Primer commit"
Registros:
git log
Checkout:
git log -> para ver el id del commit
git checkout id_del_commit -> se vuelve a la versión del commit mencionado
git checkout main -> se vuelve a la última versión del commit 
Visualizar:
git log --graph
git log --graph --pretty=oneline
git log --graph --decorate --all --oneline
git config --global alias.cualquier_nombre "log --graph --decorate --all --oneline" ->Por defecto se mostrará de esta forma
git cualquier_nombre -> se mostrará la visualización el comando que queramos

Crea .gitignore:
New-Item .gitignore -> creamos la carpeta
**/pasos_git.txt -> agregamos el archivo que no queremos versionar para ignorar en los commit

Comparar versiones:
git diff

Historial completo de interacciones
git reflog

Tagear commit para no depender de la id
git tag primer_commit
git checkout tags/primer_commit

#CONECTARSE A GITHUB

Abrir gitbash
$ ssh-keygen -t ed25519 -C "fabian.colper@gmail.com"
Luego crear las claves SSH si no las tienes, seguir los pasos.

Crear un repositorio

En la parte de codigo seleccionar SSH
git@github.com:fcolper/Hockey_2000.git

En la consola y en el directorio del proyecto
git remote add origin git@github.com:fcolper/Hockey_2000.git

Hacemos el push
git push -u origin main

En caso de haber problemas por merge o falta de actualizar:
git pull origin main
or
git pull origin main --allow-unrelated-histories


git fetch

